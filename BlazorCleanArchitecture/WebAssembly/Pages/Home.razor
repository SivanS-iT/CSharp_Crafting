@page "/"


@using NetcodeHub.Packages.Components.Validations.OnInput 
@using Blazored.Toast
@using Blazored.Toast.Services
@using WebAssembly.Data
@using WebAssembly.Services
@using WebAssembly.Services.Employee

@inject IToastService toastService
@inject IEmployeeService emp

<PageTitle>Home</PageTitle>
<div class="row">
    <div class="col-lg-6">
        <EditForm Model="employee" OnValidSubmit="Save">
            <DataAnnotationsValidator />
                <FloatingText @bind-Value="employee.Name" 
                        Label="Custom Fullname" 
                        Placeholder="John Deer"
                        class="form-control"/>
            <ValidationMessage For="()=>employee. Name" />

            <FloatingTextArea @bind-Value="employee.Address" 
                        Label="Custom Address"
                        Placeholder="eg.Wien,Austria"
                        class="form-control mb-3" />
            <ValidationMessage For="()=>employee.Address" />

            <FloatingTextArea @bind-Value="employee.Email"
                              Label="Custom Email"
                              Placeholder="eg.newMail"
                              class="form-control mb-3" />
            <ValidationMessage For="()=>employee.Email" />
            
            <button class="btn btn-primary mt-5 mb-5" type="submit">Save</button>
        </EditForm>
    </div>

    <div class="col-lg-6">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>NAME</th>
                    <th>ADDRESS</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Employees is not null)
                {
                    foreach (var item in Employees)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.Name</td>
                            <td>@item.Address</td>
                            <td>@item.Email</td>
                            <td>
                                <button class="btn btn-info btn-sm" @onclick="() => EditClicked(item)">Edit</button>
                            </td>
                            <td>
                                <button class="btn btn-danger btn-sm" @onclick="() => DeleteClicked(item.Id)">Delete</button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code{
    Employee employee = new();
    List<Employee>? Employees = new();
    protected override async Task OnInitializedAsync() => await GetData();
    private async Task GetData() => Employees = await emp.GetAll(cancellationToken: default);


    // Button Save ------------------------------------------
    async Task Save()
    {
        var addResponse = await emp.Add(employee, cancellationToken: default);

        // if (addResponse != null)
        // {
        //     toastService.ShowError("Error on adding user!");
        //     return;
        // }
        toastService.ShowSuccess("User has been added!");

        await GetData();
    }


    // Table employee buttons ------------------------------------------
    void EditClicked(Employee incomEmp) => employee = incomEmp;
    async void DeleteClicked(int id)
    {
        emp.Delete(id);

        toastService.ShowInfo("User has been deleted!");
        await GetData();
        StateHasChanged();
    }
}